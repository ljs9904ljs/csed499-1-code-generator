[2023-10-06 17:09:39] This is codeql database create --language=cpp --command=make --source-root=/home/junseok/workdir/share/codeql/mockmain-test/out_dir --overwrite /home/junseok/workdir/codeql-database --verbosity=errors
[2023-10-06 17:09:39] Log file was started late.
[2023-10-06 17:09:39] [PROGRESS] database create> Initializing database at /home/junseok/workdir/codeql-database.
[2023-10-06 17:09:39] Running plumbing command: codeql database init --overwrite --language=cpp --extractor-options-verbosity=1 --qlconfig-file=/home/junseok/workdir/share/codeql/qlconfig.yml --source-root=/home/junseok/workdir/share/codeql/mockmain-test/out_dir --allow-missing-source-root=false --allow-already-existing -- /home/junseok/workdir/codeql-database
[2023-10-06 17:09:39] Calling plumbing command: codeql resolve languages --extractor-options-verbosity=1 --format=betterjson
[2023-10-06 17:09:40] [DETAILS] resolve languages> Scanning for [codeql-extractor.yml] from /home/junseok/workdir/codeql/codeql/.codeqlmanifest.json
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/yaml/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/cpp/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/go/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/javascript/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/xml/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/ruby/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/csharp/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/csv/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/properties/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/java/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/python/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/swift/codeql-extractor.yml.
[2023-10-06 17:09:40] [DETAILS] resolve languages> Parsing /home/junseok/workdir/codeql/codeql/html/codeql-extractor.yml.
[2023-10-06 17:09:40] Plumbing command codeql resolve languages completed:
                      {
                        "aliases" : { },
                        "extractors" : {
                          "yaml" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/yaml"
                            }
                          ],
                          "cpp" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/cpp"
                            }
                          ],
                          "go" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/go"
                            }
                          ],
                          "javascript" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/javascript",
                              "extractor_options" : { }
                            }
                          ],
                          "xml" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/xml"
                            }
                          ],
                          "ruby" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/ruby",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'gzip' (the default, to write gzip-compressed TRAP) and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip)$"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "csharp" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/csharp",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'brotli' (the default, to write brotli-compressed TRAP), 'gzip', and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip|brotli)$"
                                    }
                                  }
                                },
                                "buildless" : {
                                  "title" : "Whether to use buildless (standalone) extraction.",
                                  "description" : "A value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "cil" : {
                                  "title" : "Whether to enable CIL extraction.",
                                  "description" : "A value indicating, whether CIL extraction should be enabled. The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "csv" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/csv"
                            }
                          ],
                          "properties" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/properties"
                            }
                          ],
                          "java" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/java",
                              "extractor_options" : {
                                "exclude" : {
                                  "title" : "A glob excluding files from analysis.",
                                  "description" : "A glob indicating what files to exclude from the analysis.\n",
                                  "type" : "string"
                                },
                                "add_prefer_source" : {
                                  "title" : "Whether to always prefer source files over class files.",
                                  "description" : "A value indicating whether source files should be preferred over class files. If set to 'true', the extraction adds '-Xprefer:source' to the javac command line. If set to 'false', the extraction uses the default javac behavior ('-Xprefer:newer'). The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "python" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/python"
                            }
                          ],
                          "swift" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/swift"
                            }
                          ],
                          "html" : [
                            {
                              "extractor_root" : "/home/junseok/workdir/codeql/codeql/html"
                            }
                          ]
                        }
                      }
[2023-10-06 17:09:40] [PROGRESS] database init> Calculating baseline information in /home/junseok/workdir/share/codeql/mockmain-test/out_dir
[2023-10-06 17:09:40] [SPAMMY] database init> Ignoring the following directories when processing baseline information: .git, .hg, .svn.
[2023-10-06 17:09:40] [DETAILS] database init> Running command in /home/junseok/workdir/share/codeql/mockmain-test/out_dir: /home/junseok/workdir/codeql/codeql/tools/linux64/scc --by-file --exclude-dir .git,.hg,.svn --format json --no-large --no-min .
[2023-10-06 17:09:40] [SPAMMY] database init> Found 1 baseline files for cpp.
[2023-10-06 17:09:40] [PROGRESS] database init> Calculated baseline information for languages: cpp (21ms).
[2023-10-06 17:09:40] [PROGRESS] database init> Resolving extractor cpp.
[2023-10-06 17:09:40] [DETAILS] database init> Found candidate extractor root for cpp: /home/junseok/workdir/codeql/codeql/cpp.
[2023-10-06 17:09:40] [PROGRESS] database init> Successfully loaded extractor C/C++ (cpp) from /home/junseok/workdir/codeql/codeql/cpp.
[2023-10-06 17:09:40] [PROGRESS] database init> Created skeleton CodeQL database at /home/junseok/workdir/codeql-database. This in-progress database is ready to be populated by an extractor.
[2023-10-06 17:09:40] Plumbing command codeql database init completed.
[2023-10-06 17:09:40] [PROGRESS] database create> Running build command: [make]
[2023-10-06 17:09:40] Running plumbing command: codeql database trace-command --working-dir=/home/junseok/workdir/share/codeql/mockmain-test/out_dir --index-traceless-dbs --no-db-cluster -- /home/junseok/workdir/codeql-database make
[2023-10-06 17:09:40] [PROGRESS] database trace-command> Running command in /home/junseok/workdir/share/codeql/mockmain-test/out_dir: [make]
[2023-10-06 17:09:40] [ERROR] Spawned process exited abnormally (code 2; tried to run: [/home/junseok/workdir/codeql/codeql/tools/linux64/preload_tracer, make])
[2023-10-06 17:09:40] [build-stderr] make: *** No targets specified and no makefile found.  Stop.
[2023-10-06 17:09:40] Exception caught at top level: Exit status 2 from command: [make]
                      com.semmle.cli2.Commandline.executeAndCheckResult(Commandline.java:170)
                      com.semmle.cli2.Commandline.runWithoutReturn(Commandline.java:123)
                      com.semmle.cli2.database.DatabaseProcessCommandCommon.executeSubcommand(DatabaseProcessCommandCommon.java:216)
                      com.semmle.cli2.database.TraceCommandCommand.executeSubcommand(TraceCommandCommand.java:110)
                      com.semmle.cli2.picocli.SubcommandCommon.lambda$executeSubcommandWithMessages$5(SubcommandCommon.java:747)
                      com.semmle.cli2.picocli.SubcommandCommon.withCompilationMessages(SubcommandCommon.java:417)
                      com.semmle.cli2.picocli.SubcommandCommon.executeSubcommandWithMessages(SubcommandCommon.java:745)
                      com.semmle.cli2.picocli.PlumbingRunner.run(PlumbingRunner.java:111)
                      com.semmle.cli2.picocli.SubcommandCommon.runPlumbingInProcess(SubcommandCommon.java:196)
                      com.semmle.cli2.database.CreateCommand.executeSubcommand(CreateCommand.java:176)
                      com.semmle.cli2.picocli.SubcommandCommon.lambda$executeSubcommandWithMessages$5(SubcommandCommon.java:747)
                      com.semmle.cli2.picocli.SubcommandCommon.withCompilationMessages(SubcommandCommon.java:417)
                      com.semmle.cli2.picocli.SubcommandCommon.executeSubcommandWithMessages(SubcommandCommon.java:745)
                      com.semmle.cli2.picocli.SubcommandCommon.call(SubcommandCommon.java:629)
                      com.semmle.cli2.picocli.SubcommandMaker.runMain(SubcommandMaker.java:237)
                      com.semmle.cli2.picocli.SubcommandMaker.runMain(SubcommandMaker.java:247)
                      com.semmle.cli2.CodeQL.main(CodeQL.java:113)
